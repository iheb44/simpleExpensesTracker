{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karou\\\\OneDrive\\\\Desktop\\\\react\\\\react-complete-guide\\\\src\\\\component\\\\Expense\\\\NewComponentExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItems from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport \"./NewComponentExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewComponentExpense = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.expenses.filter(items => {\n    return items.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length === 0) {\n    let expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItems, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewComponentExpense, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = NewComponentExpense;\nexport default NewComponentExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewComponentExpense\");","map":{"version":3,"sources":["C:/Users/karou/OneDrive/Desktop/react/react-complete-guide/src/component/Expense/NewComponentExpense.js"],"names":["React","useState","ExpenseItems","Card","ExpenseFilter","NewComponentExpense","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","expenses","filter","items","date","getFullYear","toString","expensesContent","length","map","expense","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,2BAAP;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAuBC,KAAD,IAAW;AACxD,WAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,OAAwCV,YAA/C;AACD,GAFwB,CAAzB;;AAGA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AACA,MAAIP,gBAAgB,CAACQ,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,QAAID,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBC,OAAD,iBACzC,QAAC,YAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACC,KAFjB;AAGE,MAAA,MAAM,EAAED,OAAO,CAACE,MAHlB;AAIE,MAAA,IAAI,EAAEF,OAAO,CAACN;AAJhB,OACOM,OAAO,CAACG,EADf;AAAA;AAAA;AAAA;AAAA,YADoB,CAAtB;AAQD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,QAAQ,EAAEjB,YADZ;AAEE,MAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGS,eALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7BD;;GAAMb,mB;;KAAAA,mB;AA8BN,eAAeA,mBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItems from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport \"./NewComponentExpense.css\";\r\n\r\nconst NewComponentExpense = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((items) => {\r\n    return items.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  let expensesContent = <p>No expenses found.</p>;\r\n  if (filteredExpenses.length === 0) {\r\n    let expensesContent = filteredExpenses.map((expense) => (\r\n      <ExpenseItems\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ));\r\n  }\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      {expensesContent}\r\n    </Card>\r\n  );\r\n};\r\nexport default NewComponentExpense;\r\n"]},"metadata":{},"sourceType":"module"}